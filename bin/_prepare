#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
ROOT=${DIR}/..;

# environment variables
source ${ROOT}/.env;

sedi()
{
    sed --version >/dev/null 2>&1 && sed -i -- "$@" || sed -i "" "$@";
}

prepare()
{
    if [ -f ${ROOT}/docker-compose.yml ]; then
        rm -f ${ROOT}/docker-compose.yml;
    fi;

    cp ${ROOT}/docker-compose.yml.template ${ROOT}/docker-compose.yml;

    # common
    sedi "s/\${ENV}/${ENV}/g" ${ROOT}/docker-compose.yml;
    sedi "s/\${PROXY_NAME}/${PROXY_NAME}/g" ${ROOT}/docker-compose.yml;

    # php-apache-engine
    sedi "s/\${APACHE_CONTAINER}/${APACHE_CONTAINER}/g" ${ROOT}/docker-compose.yml;
    sedi "s/- VIRTUAL_HOST=\${APACHE_VIRTUAL_HOST}/- VIRTUAL_HOST=${APACHE_VIRTUAL_HOST}/g" ${ROOT}/docker-compose.yml;
    sedi "s/\${USER_ID}/$(id -u)/g" ${ROOT}/docker-compose.yml; # permissions issues workaround
    sedi "s/#- .\/apache\/ext-xdebug.ini/- .\/apache\/ext-xdebug.ini/g" ${ROOT}/docker-compose.yml;
    if [ ${WITH_XDEBUG} = 0 ]; then
        sedi "s/- .\/apache\/ext-xdebug.ini/#- .\/apache\/ext-xdebug.ini/g" ${ROOT}/docker-compose.yml;
    fi;

    # mysql
    sedi "s/\${MYSQL_CONTAINER}/${MYSQL_CONTAINER}/g" ${ROOT}/docker-compose.yml;
    sedi "s/MYSQL_ROOT_PASSWORD: \${MYSQL_ROOT_PASSWORD}/MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}/g" ${ROOT}/docker-compose.yml;
    sedi "s/MYSQL_DATABASE: \${MYSQL_DATABASE}/MYSQL_DATABASE: ${MYSQL_DATABASE}/g" ${ROOT}/docker-compose.yml;
    sedi "s/MYSQL_USER: \${MYSQL_USER}/MYSQL_USER: ${MYSQL_USER}/g" ${ROOT}/docker-compose.yml;
    sedi "s/MYSQL_PASSWORD: \${MYSQL_PASSWORD}/MYSQL_PASSWORD: ${MYSQL_PASSWORD}/g" ${ROOT}/docker-compose.yml;

    if [ -f ${ROOT}/docker-compose-nginx.yml ]; then
        rm -f ${ROOT}/docker-compose-nginx.yml;
    fi;

    cp ${ROOT}/docker-compose-nginx.yml.template ${ROOT}/docker-compose-nginx.yml;

    # nginx-proxy
    sedi "s/\${NGINX_CONTAINER}/${NGINX_CONTAINER}/g" ${ROOT}/docker-compose-nginx.yml;
    sedi "s/#- \${CERTS_PATH}/- \${CERTS_PATH}/g" ${ROOT}/docker-compose-nginx.yml;
    if [ ${WITH_SSL} = 0 ]; then
        sedi "s/- \${CERTS_PATH}/#- \${CERTS_PATH}/g" ${ROOT}/docker-compose-nginx.yml;
    else
        sedi "s/- \${CERTS_PATH}/- $(echo ${CERTS_PATH} | sed -e 's/\\/\\\\/g; s/\//\\\//g; s/&/\\\&/g')/g" ${ROOT}/docker-compose-nginx.yml;
    fi;
}

prepare;

exit 0;