# @IgnoreInspection BashAddShebang

# kickoff-docker-php makefile

PROJECT_NAME=yourproject
DATABASE_NAME=database_name
ENV=dev
ENV_DOMAIN_NAME=dev.yourproject.com
WITH_XDEBUG=1

NGINX_CONTAINER=${PROJECT_NAME}_nginx_proxy_${ENV}
APACHE_CONTAINER=${PROJECT_NAME}_php_apache_engine_${ENV}
MYSQL_CONTAINER=${PROJECT_NAME}_mysql_${ENV}

# UTILS
#------------------------------------------------------
shell:
	docker exec -ti ${APACHE_CONTAINER} bash;

shell-nginx:
	docker exec -ti ${NGINX_CONTAINER} bash;

shell-mysql:
	docker exec -ti ${MYSQL_CONTAINER} bash;

mysql-cli:
	docker exec -ti ${MYSQL_CONTAINER} mysql -uroot -p;

tail:
	docker logs -f ${APACHE_CONTAINER};

tail-e:
	docker exec -ti ${APACHE_CONTAINER} tail -f /var/log/apache2/error.log;

tail-a:
	docker exec -ti ${APACHE_CONTAINER} tail -f /var/log/apache2/access.log;

tail-nginx:
	docker logs -f ${NGINX_CONTAINER};

tail-mysql:
	docker logs -f ${MYSQL_CONTAINER};

export:
	sh ./bin/_export --mysql_container ${MYSQL_CONTAINER} --database_name ${DATABASE_NAME};

import:
	sh ./bin/_import --mysql_container ${MYSQL_CONTAINER} --database_name ${DATABASE_NAME};

composer:
	sh ./bin/_composer --apache_container ${APACHE_CONTAINER} --command $(cmd);

npm:
	docker exec --user="custom_user" -ti ${APACHE_CONTAINER} npm $(cmd);

# BUILDING
#------------------------------------------------------
prepare:
	sh ./bin/_prepare --project_name ${PROJECT_NAME} --database_name ${DATABASE_NAME} --env ${ENV} --env_domain_name ${ENV_DOMAIN_NAME} --with_xdebug ${WITH_XDEBUG};

build:
	docker-compose -f docker-compose.yml build;

down:
	sh ./bin/_down;

up: down
	docker-compose -f docker-compose.yml up -d;

kickoff: prepare build up